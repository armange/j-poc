jar {
    manifest {
        attributes 'Main-Class': "$mainClass"
    }
}

task javadocJar(type: Jar) {
    from javadoc
    archiveClassifier = 'javadoc'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    from sourceSets.main.allSource
    archiveClassifier = 'sources'
}

artifacts {
    archives javadocJar, sourcesJar
}

task allInOneJar(type: Jar) {
    dependsOn.addAll(["compileJava", "processResources"])

    manifest {
        attributes 'Main-Class': "$mainClass"
    }

    archiveBaseName = "$project.name--all-in-one"
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }

    with jar
}

configure(allInOneJar) {
    group = 'build'
    description = 'Generates all-in-one jar'
}

configure(sourcesJar) {
    group = 'build'
    description = 'Generates sources jar'
}

configure(javadocJar) {
    group = 'build'
    description = 'Generates javadoc jar'
}